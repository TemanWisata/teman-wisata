[project]
name = "teman-wisata"
version = "0.2.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "argon2-cffi>=25.1.0",
    "authlib>=1.6.1",
    "fastapi>=0.116.1",
    "humanize>=4.12.3",
    "loguru>=0.7.3",
    "minio>=7.2.16",
    "mlflow>=3.1.4",
    "psutil>=7.0.0",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "rich>=14.1.0",
    "scalar-fastapi>=1.2.2",
    "supabase>=2.17.0",
    "toml>=0.10.2",
    "types-toml>=0.10.8.20240310",
]

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "cleanpy>=0.5.1",
    "mypy>=1.17.0",
    "pre-commit>=4.2.0",
    "pytest-anyio>=0.0.0",
    "pytest-cov>=6.2.1",
    "python-semantic-release>=10.2.0",
    "ruff>=0.12.5",
]

[tool.ruff]
line-length = 180
target-version = 'py312'
exclude = ['build', ]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = ["ALL"]
extend-ignore = [
    "D203",  # Ignore: one-blank-line-before-class
    "D213",  # Ignore: multi-line-summary-second-line
    "S101"
]


ignore = []
unfixable = ["B"]

[tool.semantic_release]
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "conventional"
logging_use_named_masks = false
major_on_zero = false
allow_zero_version = true
repo_dir = "."
no_git_verify = false
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]

[tool.semantic_release.branches.main]
match = "(main|master|setup-project)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = ""
exclude_commit_patterns = []
mode = "update"
insertion_flag = "Teman Wisata Version List ðŸš€"
template_dir = "docs/changelog/"

[tool.semantic_release.changelog.default_templates]
changelog_file = "docs/changelog/CHANGELOG.md"
output_format = "md"
mask_initial_release = true

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0
parse_squash_commits = true
ignore_merge_commits = true

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
